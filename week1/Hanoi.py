# 递归思想
# 假设有n个从小到大的盘子，有三个柱子，分别是起始柱，中间柱，目标柱子
# 要把n个盘子从起始柱移到目标柱，就需要把n-1个盘子先从起始柱移到中间柱，再把第n个盘子从起始柱移到目标柱
# 然后考虑把n-1个盘子从中间柱移到目标柱，方法相同，先把n-2个盘子从起始柱（中间柱）移到中间柱（起始柱）,再把第n-1个盘子从起始柱移到目标柱
# 依次类推，重复进行此过程
# 这个过程中对于n，n-1，n-2...个盘子的目标柱、中间柱、起始柱是不同的

# n为需要挪动的盘子数
# a,b,c分别为对于n个盘子的起始柱，中间柱，目标柱
def hanoi(n,a,b,c):
    if n>0:
        # 首先需要将第n个盘子从起始柱a移到目标柱c，则需要挪走n-1个盘子
        # 此时，对于n-1个盘子，起始柱为a，中间柱为c，目标柱为b
        hanoi(n-1,a,c,b)
        print(a,"->",c) #交换了柱子的位置，但都是从其对应的起始柱到对应的目标柱
        # 然后需要将n-1个盘子从上一步骤后的目标柱移到最终目标柱，又开始一个新的过程
        # 此时，对于n-1个盘子，起始柱为b，中间柱为a，目标柱为c
        hanoi(n-1,b,a,c)

hanoi(3,"a","b","c")

